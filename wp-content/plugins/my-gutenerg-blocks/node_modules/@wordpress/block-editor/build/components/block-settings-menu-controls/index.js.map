{"version":3,"names":["_components","require","_data","_compose","_i18n","_convertToGroupButtons","_blockLock","_store","_blockModeToggle","_interopRequireDefault","_blockRename","_jsxRuntime","Fill","Slot","createSlotFill","BlockSettingsMenuControlsSlot","fillProps","clientIds","selectedBlocks","selectedClientIds","isContentOnly","useSelect","select","getBlockNamesByClientId","getSelectedBlockClientIds","getBlockEditingMode","blockEditorStore","ids","canLock","useBlockLock","canRename","useBlockRename","showLockButton","length","showRenameButton","convertToGroupButtonProps","useConvertToGroupButtonProps","isGroupable","isUngroupable","showConvertToGroupButton","jsx","children","fills","jsxs","MenuGroup","ConvertToGroupButton","onClose","BlockLockMenuItem","clientId","BlockRenameControl","canMove","onlyBlock","MenuItem","onClick","pipe","onMoveTo","__","count","default","firstBlockClientId","onToggle","BlockSettingsMenuControls","props","__experimentalStyleProvider","document","_default","exports"],"sources":["@wordpress/block-editor/src/components/block-settings-menu-controls/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tcreateSlotFill,\n\tMenuGroup,\n\tMenuItem,\n\t__experimentalStyleProvider as StyleProvider,\n} from '@wordpress/components';\nimport { useSelect } from '@wordpress/data';\nimport { pipe } from '@wordpress/compose';\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport {\n\tuseConvertToGroupButtonProps,\n\tConvertToGroupButton,\n} from '../convert-to-group-buttons';\nimport { BlockLockMenuItem, useBlockLock } from '../block-lock';\nimport { store as blockEditorStore } from '../../store';\nimport BlockModeToggle from '../block-settings-menu/block-mode-toggle';\n\nimport { BlockRenameControl, useBlockRename } from '../block-rename';\n\nconst { Fill, Slot } = createSlotFill( 'BlockSettingsMenuControls' );\n\nconst BlockSettingsMenuControlsSlot = ( { fillProps, clientIds = null } ) => {\n\tconst { selectedBlocks, selectedClientIds, isContentOnly } = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockNamesByClientId,\n\t\t\t\tgetSelectedBlockClientIds,\n\t\t\t\tgetBlockEditingMode,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst ids =\n\t\t\t\tclientIds !== null ? clientIds : getSelectedBlockClientIds();\n\t\t\treturn {\n\t\t\t\tselectedBlocks: getBlockNamesByClientId( ids ),\n\t\t\t\tselectedClientIds: ids,\n\t\t\t\tisContentOnly:\n\t\t\t\t\tgetBlockEditingMode( ids[ 0 ] ) === 'contentOnly',\n\t\t\t};\n\t\t},\n\t\t[ clientIds ]\n\t);\n\n\tconst { canLock } = useBlockLock( selectedClientIds[ 0 ] );\n\tconst { canRename } = useBlockRename( selectedBlocks[ 0 ] );\n\tconst showLockButton =\n\t\tselectedClientIds.length === 1 && canLock && ! isContentOnly;\n\tconst showRenameButton =\n\t\tselectedClientIds.length === 1 && canRename && ! isContentOnly;\n\n\t// Check if current selection of blocks is Groupable or Ungroupable\n\t// and pass this props down to ConvertToGroupButton.\n\tconst convertToGroupButtonProps =\n\t\tuseConvertToGroupButtonProps( selectedClientIds );\n\tconst { isGroupable, isUngroupable } = convertToGroupButtonProps;\n\tconst showConvertToGroupButton = isGroupable || isUngroupable;\n\n\treturn (\n\t\t<Slot\n\t\t\tfillProps={ {\n\t\t\t\t...fillProps,\n\t\t\t\tselectedBlocks,\n\t\t\t\tselectedClientIds,\n\t\t\t} }\n\t\t>\n\t\t\t{ ( fills ) => {\n\t\t\t\tif (\n\t\t\t\t\t! fills?.length > 0 &&\n\t\t\t\t\t! showConvertToGroupButton &&\n\t\t\t\t\t! showLockButton\n\t\t\t\t) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn (\n\t\t\t\t\t<MenuGroup>\n\t\t\t\t\t\t{ showConvertToGroupButton && (\n\t\t\t\t\t\t\t<ConvertToGroupButton\n\t\t\t\t\t\t\t\t{ ...convertToGroupButtonProps }\n\t\t\t\t\t\t\t\tonClose={ fillProps?.onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ showLockButton && (\n\t\t\t\t\t\t\t<BlockLockMenuItem\n\t\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ showRenameButton && (\n\t\t\t\t\t\t\t<BlockRenameControl\n\t\t\t\t\t\t\t\tclientId={ selectedClientIds[ 0 ] }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ fills }\n\t\t\t\t\t\t{ fillProps?.canMove &&\n\t\t\t\t\t\t\t! fillProps?.onlyBlock &&\n\t\t\t\t\t\t\t! isContentOnly && (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tonClick={ pipe(\n\t\t\t\t\t\t\t\t\t\tfillProps?.onClose,\n\t\t\t\t\t\t\t\t\t\tfillProps?.onMoveTo\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{ __( 'Move to' ) }\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t{ fillProps?.count === 1 && ! isContentOnly && (\n\t\t\t\t\t\t\t<BlockModeToggle\n\t\t\t\t\t\t\t\tclientId={ fillProps?.firstBlockClientId }\n\t\t\t\t\t\t\t\tonToggle={ fillProps?.onClose }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t) }\n\t\t\t\t\t</MenuGroup>\n\t\t\t\t);\n\t\t\t} }\n\t\t</Slot>\n\t);\n};\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/block-settings-menu-controls/README.md\n *\n * @param {Object} props Fill props.\n * @return {Element} Element.\n */\nfunction BlockSettingsMenuControls( { ...props } ) {\n\treturn (\n\t\t<StyleProvider document={ document }>\n\t\t\t<Fill { ...props } />\n\t\t</StyleProvider>\n\t);\n}\n\nBlockSettingsMenuControls.Slot = BlockSettingsMenuControlsSlot;\n\nexport default BlockSettingsMenuControls;\n"],"mappings":"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","ignoreList":[]}