{"version":3,"names":["_object","require","getResolvedThemeFilePath","file","themeFileURIs","uri","find","themeFileUri","name","href","setMutably","object","path","value","split","finalValueKey","pop","prev","key","current","setThemeFileUris","themeJson","styles","forEach","target","getValueFromObjectPath"],"sources":["@wordpress/block-editor/src/components/global-styles/theme-file-uri-utils.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { getValueFromObjectPath } from '../../utils/object';\n\n/**\n * Looks up a theme file URI based on a relative path.\n *\n * @param {string}        file          A relative path.\n * @param {Array<Object>} themeFileURIs A collection of absolute theme file URIs and their corresponding file paths.\n * @return {string?} A resolved theme file URI, if one is found in the themeFileURIs collection.\n */\nexport function getResolvedThemeFilePath( file, themeFileURIs = [] ) {\n\tconst uri = themeFileURIs.find(\n\t\t( themeFileUri ) => themeFileUri.name === file\n\t);\n\n\tif ( ! uri?.href ) {\n\t\treturn file;\n\t}\n\n\treturn uri?.href;\n}\n\n/**\n * Mutates an object by settings a value at the provided path.\n *\n * @param {Object}              object Object to set a value in.\n * @param {number|string|Array} path   Path in the object to modify.\n * @param {*}                   value  New value to set.\n * @return {Object} Object with the new value set.\n */\nfunction setMutably( object, path, value ) {\n\tpath = path.split( '.' );\n\tconst finalValueKey = path.pop();\n\tlet prev = object;\n\n\tfor ( const key of path ) {\n\t\tconst current = prev[ key ];\n\t\tprev = current;\n\t}\n\n\tprev[ finalValueKey ] = value;\n\n\treturn object;\n}\n\n/**\n * Resolves any relative paths if a corresponding theme file URI is available.\n * Note: this function mutates the object and is specifically to be used in\n * an async styles build context in useGlobalStylesOutput\n *\n * @param {Object}        themeJson     Theme.json/Global styles tree.\n * @param {Array<Object>} themeFileURIs A collection of absolute theme file URIs and their corresponding file paths.\n * @return {Object} Returns mutated object.\n */\nexport function setThemeFileUris( themeJson, themeFileURIs ) {\n\tif ( ! themeJson?.styles || ! themeFileURIs ) {\n\t\treturn themeJson;\n\t}\n\n\tthemeFileURIs.forEach( ( { name, href, target } ) => {\n\t\tconst value = getValueFromObjectPath( themeJson, target );\n\t\tif ( value === name ) {\n\t\t\t/*\n\t\t\t * The object must not be updated immutably here because the\n\t\t\t * themeJson is a reference to the global styles tree used as a dependency in the\n\t\t\t * useGlobalStylesOutputWithConfig() hook. If we don't mutate the object,\n\t\t\t * the hook will detect the change and re-render the component, resulting\n\t\t\t * in a maximum depth exceeded error.\n\t\t\t */\n\t\t\tthemeJson = setMutably( themeJson, target, href );\n\t\t}\n\t} );\n\n\treturn themeJson;\n}\n"],"mappings":";;;;;;;AAGA,IAAAA,OAAA,GAAAC,OAAA;AAHA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASC,wBAAwBA,CAAEC,IAAI,EAAEC,aAAa,GAAG,EAAE,EAAG;EACpE,MAAMC,GAAG,GAAGD,aAAa,CAACE,IAAI,CAC3BC,YAAY,IAAMA,YAAY,CAACC,IAAI,KAAKL,IAC3C,CAAC;EAED,IAAK,CAAEE,GAAG,EAAEI,IAAI,EAAG;IAClB,OAAON,IAAI;EACZ;EAEA,OAAOE,GAAG,EAAEI,IAAI;AACjB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAAEC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAG;EAC1CD,IAAI,GAAGA,IAAI,CAACE,KAAK,CAAE,GAAI,CAAC;EACxB,MAAMC,aAAa,GAAGH,IAAI,CAACI,GAAG,CAAC,CAAC;EAChC,IAAIC,IAAI,GAAGN,MAAM;EAEjB,KAAM,MAAMO,GAAG,IAAIN,IAAI,EAAG;IACzB,MAAMO,OAAO,GAAGF,IAAI,CAAEC,GAAG,CAAE;IAC3BD,IAAI,GAAGE,OAAO;EACf;EAEAF,IAAI,CAAEF,aAAa,CAAE,GAAGF,KAAK;EAE7B,OAAOF,MAAM;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASS,gBAAgBA,CAAEC,SAAS,EAAEjB,aAAa,EAAG;EAC5D,IAAK,CAAEiB,SAAS,EAAEC,MAAM,IAAI,CAAElB,aAAa,EAAG;IAC7C,OAAOiB,SAAS;EACjB;EAEAjB,aAAa,CAACmB,OAAO,CAAE,CAAE;IAAEf,IAAI;IAAEC,IAAI;IAAEe;EAAO,CAAC,KAAM;IACpD,MAAMX,KAAK,GAAG,IAAAY,8BAAsB,EAAEJ,SAAS,EAAEG,MAAO,CAAC;IACzD,IAAKX,KAAK,KAAKL,IAAI,EAAG;MACrB;AACH;AACA;AACA;AACA;AACA;AACA;MACGa,SAAS,GAAGX,UAAU,CAAEW,SAAS,EAAEG,MAAM,EAAEf,IAAK,CAAC;IAClD;EACD,CAAE,CAAC;EAEH,OAAOY,SAAS;AACjB","ignoreList":[]}