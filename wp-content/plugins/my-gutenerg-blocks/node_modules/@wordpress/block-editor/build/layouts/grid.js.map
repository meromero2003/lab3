{"version":3,"names":["_i18n","require","_components","_element","_utils","_gap","_utils2","_definitions","_gridVisualizer","_jsxRuntime","RANGE_CONTROL_MAX_VALUES","px","vw","vh","em","rem","svw","lvw","dvw","svh","lvh","dvh","vi","svi","lvi","dvi","vb","svb","lvb","dvb","vmin","svmin","lvmin","dvmin","vmax","svmax","lvmax","dvmax","units","value","label","default","_default","exports","name","__","inspectorControls","GridLayoutInspectorControls","layout","onChange","layoutBlockSupport","allowSizingOnChildren","jsxs","Fragment","children","jsx","GridLayoutTypeControl","columnCount","GridLayoutColumnsAndRowsControl","GridLayoutMinimumWidthControl","toolBarControls","GridLayoutToolbarControls","clientId","GridVisualizer","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","LAYOUT_DEFINITIONS","minimumColumnWidth","rowCount","blockGapValue","spacing","blockGap","shouldSkipSerialization","getGapCSSValue","undefined","output","rules","push","length","appendSelectors","join","getBlockGapCSS","getOrientation","getAlignments","quantity","unit","parseQuantityAndUnitFromRawValue","handleSliderChange","next","handleUnitChange","newUnit","newValue","includes","toFixed","Math","round","BaseControl","VisualLabel","as","Flex","gap","FlexItem","isBlock","__experimentalUnitControl","size","onUnitChange","min","hideLabelFromVision","RangeControl","max","withInputField","__experimentalNumberControl","validValue","parseInt","window","__experimentalEnableGridInteractivity","tempColumnCount","setTempColumnCount","useState","tempMinimumColumnWidth","setTempMinimumColumnWidth","isManual","onChangeType","__experimentalToggleGroupControl","__nextHasNoMarginBottom","__experimentalToggleGroupControlOption"],"sources":["@wordpress/block-editor/src/layouts/grid.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\nimport {\n\tBaseControl,\n\tFlex,\n\tFlexItem,\n\tRangeControl,\n\t__experimentalNumberControl as NumberControl,\n\t__experimentalToggleGroupControl as ToggleGroupControl,\n\t__experimentalToggleGroupControlOption as ToggleGroupControlOption,\n\t__experimentalUnitControl as UnitControl,\n\t__experimentalParseQuantityAndUnitFromRawValue as parseQuantityAndUnitFromRawValue,\n} from '@wordpress/components';\nimport { useState } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport { appendSelectors, getBlockGapCSS } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\nimport { GridVisualizer } from '../components/grid-visualizer';\n\nconst RANGE_CONTROL_MAX_VALUES = {\n\tpx: 600,\n\t'%': 100,\n\tvw: 100,\n\tvh: 100,\n\tem: 38,\n\trem: 38,\n\tsvw: 100,\n\tlvw: 100,\n\tdvw: 100,\n\tsvh: 100,\n\tlvh: 100,\n\tdvh: 100,\n\tvi: 100,\n\tsvi: 100,\n\tlvi: 100,\n\tdvi: 100,\n\tvb: 100,\n\tsvb: 100,\n\tlvb: 100,\n\tdvb: 100,\n\tvmin: 100,\n\tsvmin: 100,\n\tlvmin: 100,\n\tdvmin: 100,\n\tvmax: 100,\n\tsvmax: 100,\n\tlvmax: 100,\n\tdvmax: 100,\n};\n\nconst units = [\n\t{ value: 'px', label: 'px', default: 0 },\n\t{ value: 'rem', label: 'rem', default: 0 },\n\t{ value: 'em', label: 'em', default: 0 },\n];\n\nexport default {\n\tname: 'grid',\n\tlabel: __( 'Grid' ),\n\tinspectorControls: function GridLayoutInspectorControls( {\n\t\tlayout = {},\n\t\tonChange,\n\t\tlayoutBlockSupport = {},\n\t} ) {\n\t\tconst { allowSizingOnChildren = false } = layoutBlockSupport;\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<GridLayoutTypeControl\n\t\t\t\t\tlayout={ layout }\n\t\t\t\t\tonChange={ onChange }\n\t\t\t\t/>\n\t\t\t\t{ layout?.columnCount ? (\n\t\t\t\t\t<GridLayoutColumnsAndRowsControl\n\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t\tallowSizingOnChildren={ allowSizingOnChildren }\n\t\t\t\t\t/>\n\t\t\t\t) : (\n\t\t\t\t\t<GridLayoutMinimumWidthControl\n\t\t\t\t\t\tlayout={ layout }\n\t\t\t\t\t\tonChange={ onChange }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t</>\n\t\t);\n\t},\n\ttoolBarControls: function GridLayoutToolbarControls( { clientId } ) {\n\t\treturn <GridVisualizer clientId={ clientId } />;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tlayout,\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst {\n\t\t\tminimumColumnWidth = '12rem',\n\t\t\tcolumnCount = null,\n\t\t\trowCount = null,\n\t\t} = layout;\n\n\t\t// If a block's block.json skips serialization for spacing or spacing.blockGap,\n\t\t// don't apply the user-defined value to the styles.\n\t\tconst blockGapValue =\n\t\t\tstyle?.spacing?.blockGap &&\n\t\t\t! shouldSkipSerialization( blockName, 'spacing', 'blockGap' )\n\t\t\t\t? getGapCSSValue( style?.spacing?.blockGap, '0.5em' )\n\t\t\t\t: undefined;\n\n\t\tlet output = '';\n\t\tconst rules = [];\n\n\t\tif ( columnCount ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(${ columnCount }, minmax(0, 1fr))`\n\t\t\t);\n\t\t\tif ( rowCount ) {\n\t\t\t\trules.push(\n\t\t\t\t\t`grid-template-rows: repeat(${ rowCount }, minmax(0, 1fr))`\n\t\t\t\t);\n\t\t\t}\n\t\t} else if ( minimumColumnWidth ) {\n\t\t\trules.push(\n\t\t\t\t`grid-template-columns: repeat(auto-fill, minmax(min(${ minimumColumnWidth }, 100%), 1fr))`,\n\t\t\t\t'container-type: inline-size'\n\t\t\t);\n\t\t}\n\n\t\tif ( rules.length ) {\n\t\t\t// Reason to disable: the extra line breaks added by prettier mess with the unit tests.\n\t\t\t// eslint-disable-next-line prettier/prettier\n\t\t\toutput = `${ appendSelectors( selector ) } { ${ rules.join(\n\t\t\t\t'; '\n\t\t\t) }; }`;\n\t\t}\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'grid',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'horizontal';\n\t},\n\tgetAlignments() {\n\t\treturn [];\n\t},\n};\n\n// Enables setting minimum width of grid items.\nfunction GridLayoutMinimumWidthControl( { layout, onChange } ) {\n\tconst { minimumColumnWidth: value = '12rem' } = layout;\n\tconst [ quantity, unit ] = parseQuantityAndUnitFromRawValue( value );\n\n\tconst handleSliderChange = ( next ) => {\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: [ next, unit ].join( '' ),\n\t\t} );\n\t};\n\n\t// Mostly copied from HeightControl.\n\tconst handleUnitChange = ( newUnit ) => {\n\t\t// Attempt to smooth over differences between currentUnit and newUnit.\n\t\t// This should slightly improve the experience of switching between unit types.\n\t\tlet newValue;\n\n\t\tif ( [ 'em', 'rem' ].includes( newUnit ) && unit === 'px' ) {\n\t\t\t// Convert pixel value to an approximate of the new unit, assuming a root size of 16px.\n\t\t\tnewValue = ( quantity / 16 ).toFixed( 2 ) + newUnit;\n\t\t} else if ( [ 'em', 'rem' ].includes( unit ) && newUnit === 'px' ) {\n\t\t\t// Convert to pixel value assuming a root size of 16px.\n\t\t\tnewValue = Math.round( quantity * 16 ) + newUnit;\n\t\t}\n\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tminimumColumnWidth: newValue,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<fieldset>\n\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t{ __( 'Minimum column width' ) }\n\t\t\t</BaseControl.VisualLabel>\n\t\t\t<Flex gap={ 4 }>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<UnitControl\n\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\tonChange={ ( newValue ) => {\n\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\tminimumColumnWidth: newValue,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t} }\n\t\t\t\t\t\tonUnitChange={ handleUnitChange }\n\t\t\t\t\t\tvalue={ value }\n\t\t\t\t\t\tunits={ units }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t<RangeControl\n\t\t\t\t\t\tonChange={ handleSliderChange }\n\t\t\t\t\t\tvalue={ quantity }\n\t\t\t\t\t\tmin={ 0 }\n\t\t\t\t\t\tmax={ RANGE_CONTROL_MAX_VALUES[ unit ] || 600 }\n\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\tlabel={ __( 'Minimum column width' ) }\n\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t/>\n\t\t\t\t</FlexItem>\n\t\t\t</Flex>\n\t\t</fieldset>\n\t);\n}\n\n// Enables setting number of grid columns\nfunction GridLayoutColumnsAndRowsControl( {\n\tlayout,\n\tonChange,\n\tallowSizingOnChildren,\n} ) {\n\tconst { columnCount = 3, rowCount } = layout;\n\n\treturn (\n\t\t<>\n\t\t\t<fieldset>\n\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t\t{ __( 'Columns' ) }\n\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t<Flex gap={ 4 }>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t\t * If the input is cleared, avoid switching\n\t\t\t\t\t\t\t\t * back to \"Auto\" by setting a value of \"1\".\n\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\tconst validValue = value !== '' ? value : '1';\n\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\tcolumnCount: validValue,\n\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tvalue={ columnCount }\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\tvalue={ parseInt( columnCount, 10 ) } // RangeControl can't deal with strings.\n\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\tcolumnCount: value,\n\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\tmax={ 16 }\n\t\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\t\tlabel={ __( 'Columns' ) }\n\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t/>\n\t\t\t\t\t</FlexItem>\n\t\t\t\t</Flex>\n\t\t\t</fieldset>\n\t\t\t{ allowSizingOnChildren &&\n\t\t\t\twindow.__experimentalEnableGridInteractivity && (\n\t\t\t\t\t<fieldset>\n\t\t\t\t\t\t<BaseControl.VisualLabel as=\"legend\">\n\t\t\t\t\t\t\t{ __( 'Rows' ) }\n\t\t\t\t\t\t</BaseControl.VisualLabel>\n\t\t\t\t\t\t<Flex gap={ 4 }>\n\t\t\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t\t\t<NumberControl\n\t\t\t\t\t\t\t\t\tsize=\"__unstable-large\"\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) => {\n\t\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\t\trowCount: value,\n\t\t\t\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\t\t\tvalue={ rowCount }\n\t\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Rows' ) }\n\t\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t\t<FlexItem isBlock>\n\t\t\t\t\t\t\t\t<RangeControl\n\t\t\t\t\t\t\t\t\tvalue={ parseInt( rowCount, 10 ) } // RangeControl can't deal with strings.\n\t\t\t\t\t\t\t\t\tonChange={ ( value ) =>\n\t\t\t\t\t\t\t\t\t\tonChange( {\n\t\t\t\t\t\t\t\t\t\t\t...layout,\n\t\t\t\t\t\t\t\t\t\t\trowCount: value,\n\t\t\t\t\t\t\t\t\t\t} )\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tmin={ 1 }\n\t\t\t\t\t\t\t\t\tmax={ 16 }\n\t\t\t\t\t\t\t\t\twithInputField={ false }\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Rows' ) }\n\t\t\t\t\t\t\t\t\thideLabelFromVision\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</FlexItem>\n\t\t\t\t\t\t</Flex>\n\t\t\t\t\t</fieldset>\n\t\t\t\t) }\n\t\t</>\n\t);\n}\n\n// Enables switching between grid types\nfunction GridLayoutTypeControl( { layout, onChange } ) {\n\tconst { columnCount, minimumColumnWidth } = layout;\n\n\t/**\n\t * When switching, temporarily save any custom values set on the\n\t * previous type so we can switch back without loss.\n\t */\n\tconst [ tempColumnCount, setTempColumnCount ] = useState(\n\t\tcolumnCount || 3\n\t);\n\tconst [ tempMinimumColumnWidth, setTempMinimumColumnWidth ] = useState(\n\t\tminimumColumnWidth || '12rem'\n\t);\n\n\tconst isManual = !! columnCount ? 'manual' : 'auto';\n\n\tconst onChangeType = ( value ) => {\n\t\tif ( value === 'manual' ) {\n\t\t\tsetTempMinimumColumnWidth( minimumColumnWidth || '12rem' );\n\t\t} else {\n\t\t\tsetTempColumnCount( columnCount || 3 );\n\t\t}\n\t\tonChange( {\n\t\t\t...layout,\n\t\t\tcolumnCount: value === 'manual' ? tempColumnCount : null,\n\t\t\tminimumColumnWidth:\n\t\t\t\tvalue === 'auto' ? tempMinimumColumnWidth : null,\n\t\t} );\n\t};\n\n\treturn (\n\t\t<ToggleGroupControl\n\t\t\t__nextHasNoMarginBottom\n\t\t\tlabel={ __( 'Type' ) }\n\t\t\tvalue={ isManual }\n\t\t\tonChange={ onChangeType }\n\t\t\tisBlock\n\t\t>\n\t\t\t<ToggleGroupControlOption\n\t\t\t\tkey=\"auto\"\n\t\t\t\tvalue=\"auto\"\n\t\t\t\tlabel={ __( 'Auto' ) }\n\t\t\t/>\n\t\t\t<ToggleGroupControlOption\n\t\t\t\tkey=\"manual\"\n\t\t\t\tvalue=\"manual\"\n\t\t\t\tlabel={ __( 'Manual' ) }\n\t\t\t/>\n\t\t</ToggleGroupControl>\n\t);\n}\n"],"mappings":"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","ignoreList":[]}