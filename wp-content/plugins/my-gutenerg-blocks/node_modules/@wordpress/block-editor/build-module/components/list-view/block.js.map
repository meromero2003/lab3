{"version":3,"names":["clsx","hasBlockSupport","switchToBlockType","store","blocksStore","__experimentalTreeGridCell","TreeGridCell","__experimentalTreeGridItem","TreeGridItem","useInstanceId","moreVertical","useCallback","useMemo","useState","useRef","memo","useDispatch","useSelect","__","BACKSPACE","DELETE","isShallowEqual","__unstableUseShortcutEventMatch","useShortcutEventMatch","speak","ListViewLeaf","useListViewScrollIntoView","BlockMoverUpButton","BlockMoverDownButton","ListViewBlockContents","useListViewContext","getBlockPositionDescription","getBlockPropertiesDescription","focusListItem","blockEditorStore","useBlockDisplayInformation","useBlockLock","AriaReferencedText","unlock","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","ListViewBlock","block","clientId","displacement","isAfterDraggedBlocks","isDragged","isNesting","isSelected","isBranchSelected","selectBlock","position","level","rowCount","siblingBlockCount","showBlockMovers","path","isExpanded","selectedClientIds","isSyncedBranch","cellRef","rowRef","settingsRef","isHovered","setIsHovered","settingsAnchorRect","setSettingsAnchorRect","isLocked","canEdit","canMove","isFirstSelectedBlock","isLastSelectedBlock","length","toggleBlockHighlight","duplicateBlocks","multiSelect","replaceBlocks","removeBlocks","insertAfterBlock","insertBeforeBlock","setOpenedBlockSettingsMenu","canInsertBlockType","getSelectedBlockClientIds","getPreviousBlockClientId","getBlockRootClientId","getBlockOrder","getBlockParents","getBlocksByClientId","canRemoveBlocks","isGroupable","getGroupingBlockName","blockInformation","blockName","allowRightClickOverrides","select","getBlock","getBlockName","getSettings","showBlockActions","instanceId","descriptionId","expand","collapse","collapseAll","BlockSettingsMenu","listViewInstanceId","expandedState","setInsertedBlock","treeGridElementRef","rootClientId","isMatch","getBlocksToUpdate","selectedBlockClientIds","isUpdatingSelectedBlocks","includes","firstBlockClientId","firstBlockRootClientId","blocksToUpdate","onKeyDown","event","defaultPrevented","isDeleteKey","keyCode","stopPropagation","preventDefault","undefined","_getPreviousBlockClie","target","closest","blocksToDelete","blockToFocus","shouldUpdateSelection","updateFocusAndSelection","canDuplicate","every","blockToUpdate","name","updatedBlocks","newlySelectedBlocks","at","blockClientIds","blockParents","blocks","groupingBlockName","newBlocks","onMouseEnter","onMouseLeave","selectEditorBlock","focusClientId","shouldSelectBlock","current","toggleExpanded","onContextMenu","click","window","DOMRect","clientX","clientY","onMouseDown","button","settingsPopoverAnchor","ownerDocument","getBoundingClientRect","clearSettingsAnchorRect","rowItemRef","blockPositionDescription","blockPropertiesDescription","hasSiblings","hasRenderedMovers","moverCellClassName","listViewBlockSettingsClassName","colSpan","classes","isSynced","dropdownClientIds","currentlyEditingBlockInCanvas","className","onFocus","onBlur","id","ref","children","tabIndex","onClick","onToggleExpanded","ariaDescribedBy","withoutGridItem","orientation","clientIds","icon","label","popoverProps","anchor","toggleProps","disableOpenOnArrowDown","__experimentalSelectBlock"],"sources":["@wordpress/block-editor/src/components/list-view/block.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\n\n/**\n * WordPress dependencies\n */\nimport {\n\thasBlockSupport,\n\tswitchToBlockType,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\nimport {\n\t__experimentalTreeGridCell as TreeGridCell,\n\t__experimentalTreeGridItem as TreeGridItem,\n} from '@wordpress/components';\nimport { useInstanceId } from '@wordpress/compose';\nimport { moreVertical } from '@wordpress/icons';\nimport {\n\tuseCallback,\n\tuseMemo,\n\tuseState,\n\tuseRef,\n\tmemo,\n} from '@wordpress/element';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __ } from '@wordpress/i18n';\nimport { BACKSPACE, DELETE } from '@wordpress/keycodes';\nimport isShallowEqual from '@wordpress/is-shallow-equal';\nimport { __unstableUseShortcutEventMatch as useShortcutEventMatch } from '@wordpress/keyboard-shortcuts';\nimport { speak } from '@wordpress/a11y';\n\n/**\n * Internal dependencies\n */\nimport ListViewLeaf from './leaf';\nimport useListViewScrollIntoView from './use-list-view-scroll-into-view';\nimport {\n\tBlockMoverUpButton,\n\tBlockMoverDownButton,\n} from '../block-mover/button';\nimport ListViewBlockContents from './block-contents';\nimport { useListViewContext } from './context';\nimport {\n\tgetBlockPositionDescription,\n\tgetBlockPropertiesDescription,\n\tfocusListItem,\n} from './utils';\nimport { store as blockEditorStore } from '../../store';\nimport useBlockDisplayInformation from '../use-block-display-information';\nimport { useBlockLock } from '../block-lock';\nimport AriaReferencedText from './aria-referenced-text';\nimport { unlock } from '../../lock-unlock';\n\nfunction ListViewBlock( {\n\tblock: { clientId },\n\tdisplacement,\n\tisAfterDraggedBlocks,\n\tisDragged,\n\tisNesting,\n\tisSelected,\n\tisBranchSelected,\n\tselectBlock,\n\tposition,\n\tlevel,\n\trowCount,\n\tsiblingBlockCount,\n\tshowBlockMovers,\n\tpath,\n\tisExpanded,\n\tselectedClientIds,\n\tisSyncedBranch,\n} ) {\n\tconst cellRef = useRef( null );\n\tconst rowRef = useRef( null );\n\tconst settingsRef = useRef( null );\n\tconst [ isHovered, setIsHovered ] = useState( false );\n\tconst [ settingsAnchorRect, setSettingsAnchorRect ] = useState();\n\n\tconst { isLocked, canEdit, canMove } = useBlockLock( clientId );\n\n\tconst isFirstSelectedBlock =\n\t\tisSelected && selectedClientIds[ 0 ] === clientId;\n\tconst isLastSelectedBlock =\n\t\tisSelected &&\n\t\tselectedClientIds[ selectedClientIds.length - 1 ] === clientId;\n\n\tconst {\n\t\ttoggleBlockHighlight,\n\t\tduplicateBlocks,\n\t\tmultiSelect,\n\t\treplaceBlocks,\n\t\tremoveBlocks,\n\t\tinsertAfterBlock,\n\t\tinsertBeforeBlock,\n\t\tsetOpenedBlockSettingsMenu,\n\t} = unlock( useDispatch( blockEditorStore ) );\n\n\tconst {\n\t\tcanInsertBlockType,\n\t\tgetSelectedBlockClientIds,\n\t\tgetPreviousBlockClientId,\n\t\tgetBlockRootClientId,\n\t\tgetBlockOrder,\n\t\tgetBlockParents,\n\t\tgetBlocksByClientId,\n\t\tcanRemoveBlocks,\n\t\tisGroupable,\n\t} = useSelect( blockEditorStore );\n\tconst { getGroupingBlockName } = useSelect( blocksStore );\n\n\tconst blockInformation = useBlockDisplayInformation( clientId );\n\n\tconst { block, blockName, allowRightClickOverrides } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { getBlock, getBlockName, getSettings } =\n\t\t\t\tselect( blockEditorStore );\n\n\t\t\treturn {\n\t\t\t\tblock: getBlock( clientId ),\n\t\t\t\tblockName: getBlockName( clientId ),\n\t\t\t\tallowRightClickOverrides:\n\t\t\t\t\tgetSettings().allowRightClickOverrides,\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\n\tconst showBlockActions =\n\t\t// When a block hides its toolbar it also hides the block settings menu,\n\t\t// since that menu is part of the toolbar in the editor canvas.\n\t\t// List View respects this by also hiding the block settings menu.\n\t\thasBlockSupport( blockName, '__experimentalToolbar', true );\n\tconst instanceId = useInstanceId( ListViewBlock );\n\tconst descriptionId = `list-view-block-select-button__description-${ instanceId }`;\n\n\tconst {\n\t\texpand,\n\t\tcollapse,\n\t\tcollapseAll,\n\t\tBlockSettingsMenu,\n\t\tlistViewInstanceId,\n\t\texpandedState,\n\t\tsetInsertedBlock,\n\t\ttreeGridElementRef,\n\t\trootClientId,\n\t} = useListViewContext();\n\tconst isMatch = useShortcutEventMatch();\n\n\t// Determine which blocks to update:\n\t// If the current (focused) block is part of the block selection, use the whole selection.\n\t// If the focused block is not part of the block selection, only update the focused block.\n\tfunction getBlocksToUpdate() {\n\t\tconst selectedBlockClientIds = getSelectedBlockClientIds();\n\t\tconst isUpdatingSelectedBlocks =\n\t\t\tselectedBlockClientIds.includes( clientId );\n\t\tconst firstBlockClientId = isUpdatingSelectedBlocks\n\t\t\t? selectedBlockClientIds[ 0 ]\n\t\t\t: clientId;\n\t\tconst firstBlockRootClientId =\n\t\t\tgetBlockRootClientId( firstBlockClientId );\n\n\t\tconst blocksToUpdate = isUpdatingSelectedBlocks\n\t\t\t? selectedBlockClientIds\n\t\t\t: [ clientId ];\n\n\t\treturn {\n\t\t\tblocksToUpdate,\n\t\t\tfirstBlockClientId,\n\t\t\tfirstBlockRootClientId,\n\t\t\tselectedBlockClientIds,\n\t\t};\n\t}\n\n\t/**\n\t * @param {KeyboardEvent} event\n\t */\n\tasync function onKeyDown( event ) {\n\t\tif ( event.defaultPrevented ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst isDeleteKey = [ BACKSPACE, DELETE ].includes( event.keyCode );\n\n\t\t// If multiple blocks are selected, deselect all blocks when the user\n\t\t// presses the escape key.\n\t\tif (\n\t\t\tisMatch( 'core/block-editor/unselect', event ) &&\n\t\t\tselectedClientIds.length > 0\n\t\t) {\n\t\t\tevent.stopPropagation();\n\t\t\tevent.preventDefault();\n\t\t\tselectBlock( event, undefined );\n\t\t} else if (\n\t\t\tisDeleteKey ||\n\t\t\tisMatch( 'core/block-editor/remove', event )\n\t\t) {\n\t\t\t// Do not handle single-key block deletion shortcuts when events come from modals;\n\t\t\t// retain the default behavior for these keys.\n\t\t\tif ( isDeleteKey && event.target.closest( '[role=dialog]' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\tblocksToUpdate: blocksToDelete,\n\t\t\t\tfirstBlockClientId,\n\t\t\t\tfirstBlockRootClientId,\n\t\t\t\tselectedBlockClientIds,\n\t\t\t} = getBlocksToUpdate();\n\n\t\t\t// Don't update the selection if the blocks cannot be deleted.\n\t\t\tif ( ! canRemoveBlocks( blocksToDelete, firstBlockRootClientId ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet blockToFocus =\n\t\t\t\tgetPreviousBlockClientId( firstBlockClientId ) ??\n\t\t\t\t// If the previous block is not found (when the first block is deleted),\n\t\t\t\t// fallback to focus the parent block.\n\t\t\t\tfirstBlockRootClientId;\n\n\t\t\tremoveBlocks( blocksToDelete, false );\n\n\t\t\t// Update the selection if the original selection has been removed.\n\t\t\tconst shouldUpdateSelection =\n\t\t\t\tselectedBlockClientIds.length > 0 &&\n\t\t\t\tgetSelectedBlockClientIds().length === 0;\n\n\t\t\t// If there's no previous block nor parent block, focus the first block.\n\t\t\tif ( ! blockToFocus ) {\n\t\t\t\tblockToFocus = getBlockOrder()[ 0 ];\n\t\t\t}\n\n\t\t\tupdateFocusAndSelection( blockToFocus, shouldUpdateSelection );\n\t\t} else if ( isMatch( 'core/block-editor/duplicate', event ) ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst { blocksToUpdate, firstBlockRootClientId } =\n\t\t\t\tgetBlocksToUpdate();\n\n\t\t\tconst canDuplicate = getBlocksByClientId( blocksToUpdate ).every(\n\t\t\t\t( blockToUpdate ) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t!! blockToUpdate &&\n\t\t\t\t\t\thasBlockSupport(\n\t\t\t\t\t\t\tblockToUpdate.name,\n\t\t\t\t\t\t\t'multiple',\n\t\t\t\t\t\t\ttrue\n\t\t\t\t\t\t) &&\n\t\t\t\t\t\tcanInsertBlockType(\n\t\t\t\t\t\t\tblockToUpdate.name,\n\t\t\t\t\t\t\tfirstBlockRootClientId\n\t\t\t\t\t\t)\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t);\n\n\t\t\tif ( canDuplicate ) {\n\t\t\t\tconst updatedBlocks = await duplicateBlocks(\n\t\t\t\t\tblocksToUpdate,\n\t\t\t\t\tfalse\n\t\t\t\t);\n\n\t\t\t\tif ( updatedBlocks?.length ) {\n\t\t\t\t\t// If blocks have been duplicated, focus the first duplicated block.\n\t\t\t\t\tupdateFocusAndSelection( updatedBlocks[ 0 ], false );\n\t\t\t\t}\n\t\t\t}\n\t\t} else if ( isMatch( 'core/block-editor/insert-before', event ) ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst { blocksToUpdate } = getBlocksToUpdate();\n\t\t\tawait insertBeforeBlock( blocksToUpdate[ 0 ] );\n\t\t\tconst newlySelectedBlocks = getSelectedBlockClientIds();\n\n\t\t\t// Focus the first block of the newly inserted blocks, to keep focus within the list view.\n\t\t\tsetOpenedBlockSettingsMenu( undefined );\n\t\t\tupdateFocusAndSelection( newlySelectedBlocks[ 0 ], false );\n\t\t} else if ( isMatch( 'core/block-editor/insert-after', event ) ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst { blocksToUpdate } = getBlocksToUpdate();\n\t\t\tawait insertAfterBlock( blocksToUpdate.at( -1 ) );\n\t\t\tconst newlySelectedBlocks = getSelectedBlockClientIds();\n\n\t\t\t// Focus the first block of the newly inserted blocks, to keep focus within the list view.\n\t\t\tsetOpenedBlockSettingsMenu( undefined );\n\t\t\tupdateFocusAndSelection( newlySelectedBlocks[ 0 ], false );\n\t\t} else if ( isMatch( 'core/block-editor/select-all', event ) ) {\n\t\t\tevent.preventDefault();\n\n\t\t\tconst { firstBlockRootClientId, selectedBlockClientIds } =\n\t\t\t\tgetBlocksToUpdate();\n\t\t\tconst blockClientIds = getBlockOrder( firstBlockRootClientId );\n\t\t\tif ( ! blockClientIds.length ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If we have selected all sibling nested blocks, try selecting up a level.\n\t\t\t// This is a similar implementation to that used by `useSelectAll`.\n\t\t\t// `isShallowEqual` is used for the list view instead of a length check,\n\t\t\t// as the array of siblings of the currently focused block may be a different\n\t\t\t// set of blocks from the current block selection if the user is focused\n\t\t\t// on a different part of the list view from the block selection.\n\t\t\tif ( isShallowEqual( selectedBlockClientIds, blockClientIds ) ) {\n\t\t\t\t// Only select up a level if the first block is not the root block.\n\t\t\t\t// This ensures that the block selection can't break out of the root block\n\t\t\t\t// used by the list view, if the list view is only showing a partial hierarchy.\n\t\t\t\tif (\n\t\t\t\t\tfirstBlockRootClientId &&\n\t\t\t\t\tfirstBlockRootClientId !== rootClientId\n\t\t\t\t) {\n\t\t\t\t\tupdateFocusAndSelection( firstBlockRootClientId, true );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Select all while passing `null` to skip focusing to the editor canvas,\n\t\t\t// and retain focus within the list view.\n\t\t\tmultiSelect(\n\t\t\t\tblockClientIds[ 0 ],\n\t\t\t\tblockClientIds[ blockClientIds.length - 1 ],\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if ( isMatch( 'core/block-editor/collapse-list-view', event ) ) {\n\t\t\tevent.preventDefault();\n\t\t\tconst { firstBlockClientId } = getBlocksToUpdate();\n\t\t\tconst blockParents = getBlockParents( firstBlockClientId, false );\n\t\t\t// Collapse all blocks.\n\t\t\tcollapseAll();\n\t\t\t// Expand all parents of the current block.\n\t\t\texpand( blockParents );\n\t\t} else if ( isMatch( 'core/block-editor/group', event ) ) {\n\t\t\tconst { blocksToUpdate } = getBlocksToUpdate();\n\t\t\tif ( blocksToUpdate.length > 1 && isGroupable( blocksToUpdate ) ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\tconst blocks = getBlocksByClientId( blocksToUpdate );\n\t\t\t\tconst groupingBlockName = getGroupingBlockName();\n\t\t\t\tconst newBlocks = switchToBlockType(\n\t\t\t\t\tblocks,\n\t\t\t\t\tgroupingBlockName\n\t\t\t\t);\n\t\t\t\treplaceBlocks( blocksToUpdate, newBlocks );\n\t\t\t\tspeak( __( 'Selected blocks are grouped.' ) );\n\t\t\t\tconst newlySelectedBlocks = getSelectedBlockClientIds();\n\t\t\t\t// Focus the first block of the newly inserted blocks, to keep focus within the list view.\n\t\t\t\tsetOpenedBlockSettingsMenu( undefined );\n\t\t\t\tupdateFocusAndSelection( newlySelectedBlocks[ 0 ], false );\n\t\t\t}\n\t\t}\n\t}\n\n\tconst onMouseEnter = useCallback( () => {\n\t\tsetIsHovered( true );\n\t\ttoggleBlockHighlight( clientId, true );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\tconst onMouseLeave = useCallback( () => {\n\t\tsetIsHovered( false );\n\t\ttoggleBlockHighlight( clientId, false );\n\t}, [ clientId, setIsHovered, toggleBlockHighlight ] );\n\n\tconst selectEditorBlock = useCallback(\n\t\t( event ) => {\n\t\t\tselectBlock( event, clientId );\n\t\t\tevent.preventDefault();\n\t\t},\n\t\t[ clientId, selectBlock ]\n\t);\n\n\tconst updateFocusAndSelection = useCallback(\n\t\t( focusClientId, shouldSelectBlock ) => {\n\t\t\tif ( shouldSelectBlock ) {\n\t\t\t\tselectBlock( undefined, focusClientId, null, null );\n\t\t\t}\n\n\t\t\tfocusListItem( focusClientId, treeGridElementRef?.current );\n\t\t},\n\t\t[ selectBlock, treeGridElementRef ]\n\t);\n\n\tconst toggleExpanded = useCallback(\n\t\t( event ) => {\n\t\t\t// Prevent shift+click from opening link in a new window when toggling.\n\t\t\tevent.preventDefault();\n\t\t\tevent.stopPropagation();\n\t\t\tif ( isExpanded === true ) {\n\t\t\t\tcollapse( clientId );\n\t\t\t} else if ( isExpanded === false ) {\n\t\t\t\texpand( clientId );\n\t\t\t}\n\t\t},\n\t\t[ clientId, expand, collapse, isExpanded ]\n\t);\n\n\t// Allow right-clicking an item in the List View to open up the block settings dropdown.\n\tconst onContextMenu = useCallback(\n\t\t( event ) => {\n\t\t\tif ( showBlockActions && allowRightClickOverrides ) {\n\t\t\t\tsettingsRef.current?.click();\n\t\t\t\t// Ensure the position of the settings dropdown is at the cursor.\n\t\t\t\tsetSettingsAnchorRect(\n\t\t\t\t\tnew window.DOMRect( event.clientX, event.clientY, 0, 0 )\n\t\t\t\t);\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\t\t[ allowRightClickOverrides, settingsRef, showBlockActions ]\n\t);\n\n\tconst onMouseDown = useCallback(\n\t\t( event ) => {\n\t\t\t// Prevent right-click from focusing the block,\n\t\t\t// because focus will be handled when opening the block settings dropdown.\n\t\t\tif ( allowRightClickOverrides && event.button === 2 ) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t},\n\t\t[ allowRightClickOverrides ]\n\t);\n\n\tconst settingsPopoverAnchor = useMemo( () => {\n\t\tconst { ownerDocument } = rowRef?.current || {};\n\n\t\t// If no custom position is set, the settings dropdown will be anchored to the\n\t\t// DropdownMenu toggle button.\n\t\tif ( ! settingsAnchorRect || ! ownerDocument ) {\n\t\t\treturn undefined;\n\t\t}\n\n\t\t// Position the settings dropdown at the cursor when right-clicking a block.\n\t\treturn {\n\t\t\townerDocument,\n\t\t\tgetBoundingClientRect() {\n\t\t\t\treturn settingsAnchorRect;\n\t\t\t},\n\t\t};\n\t}, [ settingsAnchorRect ] );\n\n\tconst clearSettingsAnchorRect = useCallback( () => {\n\t\t// Clear the custom position for the settings dropdown so that it is restored back\n\t\t// to being anchored to the DropdownMenu toggle button.\n\t\tsetSettingsAnchorRect( undefined );\n\t}, [ setSettingsAnchorRect ] );\n\n\t// Pass in a ref to the row, so that it can be scrolled\n\t// into view when selected. For long lists, the placeholder for the\n\t// selected block is also observed, within ListViewLeafPlaceholder.\n\tuseListViewScrollIntoView( {\n\t\tisSelected,\n\t\trowItemRef: rowRef,\n\t\tselectedClientIds,\n\t} );\n\n\t// When switching between rendering modes (such as template preview and content only),\n\t// it is possible for a block to temporarily be unavailable. In this case, we should not\n\t// render the leaf, to avoid errors further down the tree.\n\tif ( ! block ) {\n\t\treturn null;\n\t}\n\n\tconst blockPositionDescription = getBlockPositionDescription(\n\t\tposition,\n\t\tsiblingBlockCount,\n\t\tlevel\n\t);\n\n\tconst blockPropertiesDescription =\n\t\tgetBlockPropertiesDescription( isLocked );\n\n\tconst hasSiblings = siblingBlockCount > 0;\n\tconst hasRenderedMovers = showBlockMovers && hasSiblings;\n\tconst moverCellClassName = clsx(\n\t\t'block-editor-list-view-block__mover-cell',\n\t\t{ 'is-visible': isHovered || isSelected }\n\t);\n\n\tconst listViewBlockSettingsClassName = clsx(\n\t\t'block-editor-list-view-block__menu-cell',\n\t\t{ 'is-visible': isHovered || isFirstSelectedBlock }\n\t);\n\n\tlet colSpan;\n\tif ( hasRenderedMovers ) {\n\t\tcolSpan = 2;\n\t} else if ( ! showBlockActions ) {\n\t\tcolSpan = 3;\n\t}\n\n\tconst classes = clsx( {\n\t\t'is-selected': isSelected,\n\t\t'is-first-selected': isFirstSelectedBlock,\n\t\t'is-last-selected': isLastSelectedBlock,\n\t\t'is-branch-selected': isBranchSelected,\n\t\t'is-synced-branch': isSyncedBranch,\n\t\t'is-dragging': isDragged,\n\t\t'has-single-cell': ! showBlockActions,\n\t\t'is-synced': blockInformation?.isSynced,\n\t\t'is-draggable': canMove,\n\t\t'is-displacement-normal': displacement === 'normal',\n\t\t'is-displacement-up': displacement === 'up',\n\t\t'is-displacement-down': displacement === 'down',\n\t\t'is-after-dragged-blocks': isAfterDraggedBlocks,\n\t\t'is-nesting': isNesting,\n\t} );\n\n\t// Only include all selected blocks if the currently clicked on block\n\t// is one of the selected blocks. This ensures that if a user attempts\n\t// to alter a block that isn't part of the selection, they're still able\n\t// to do so.\n\tconst dropdownClientIds = selectedClientIds.includes( clientId )\n\t\t? selectedClientIds\n\t\t: [ clientId ];\n\n\t// Detect if there is a block in the canvas currently being edited and multi-selection is not happening.\n\tconst currentlyEditingBlockInCanvas =\n\t\tisSelected && selectedClientIds.length === 1;\n\n\treturn (\n\t\t<ListViewLeaf\n\t\t\tclassName={ classes }\n\t\t\tisDragged={ isDragged }\n\t\t\tonKeyDown={ onKeyDown }\n\t\t\tonMouseEnter={ onMouseEnter }\n\t\t\tonMouseLeave={ onMouseLeave }\n\t\t\tonFocus={ onMouseEnter }\n\t\t\tonBlur={ onMouseLeave }\n\t\t\tlevel={ level }\n\t\t\tposition={ position }\n\t\t\trowCount={ rowCount }\n\t\t\tpath={ path }\n\t\t\tid={ `list-view-${ listViewInstanceId }-block-${ clientId }` }\n\t\t\tdata-block={ clientId }\n\t\t\tdata-expanded={ canEdit ? isExpanded : undefined }\n\t\t\tref={ rowRef }\n\t\t>\n\t\t\t<TreeGridCell\n\t\t\t\tclassName=\"block-editor-list-view-block__contents-cell\"\n\t\t\t\tcolSpan={ colSpan }\n\t\t\t\tref={ cellRef }\n\t\t\t\taria-selected={ !! isSelected }\n\t\t\t>\n\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t<div className=\"block-editor-list-view-block__contents-container\">\n\t\t\t\t\t\t<ListViewBlockContents\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ selectEditorBlock }\n\t\t\t\t\t\t\tonContextMenu={ onContextMenu }\n\t\t\t\t\t\t\tonMouseDown={ onMouseDown }\n\t\t\t\t\t\t\tonToggleExpanded={ toggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\ttabIndex={\n\t\t\t\t\t\t\t\tcurrentlyEditingBlockInCanvas ? 0 : tabIndex\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\tisExpanded={ canEdit ? isExpanded : undefined }\n\t\t\t\t\t\t\tselectedClientIds={ selectedClientIds }\n\t\t\t\t\t\t\tariaDescribedBy={ descriptionId }\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AriaReferencedText id={ descriptionId }>\n\t\t\t\t\t\t\t{ `${ blockPositionDescription } ${ blockPropertiesDescription }` }\n\t\t\t\t\t\t</AriaReferencedText>\n\t\t\t\t\t</div>\n\t\t\t\t) }\n\t\t\t</TreeGridCell>\n\t\t\t{ hasRenderedMovers && (\n\t\t\t\t<>\n\t\t\t\t\t<TreeGridCell\n\t\t\t\t\t\tclassName={ moverCellClassName }\n\t\t\t\t\t\twithoutGridItem\n\t\t\t\t\t>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverUpButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t\t<TreeGridItem>\n\t\t\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t\t\t<BlockMoverDownButton\n\t\t\t\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\t\t\t\tclientIds={ [ clientId ] }\n\t\t\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\t\t\ttabIndex={ tabIndex }\n\t\t\t\t\t\t\t\t\tonFocus={ onFocus }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t</TreeGridItem>\n\t\t\t\t\t</TreeGridCell>\n\t\t\t\t</>\n\t\t\t) }\n\n\t\t\t{ showBlockActions && BlockSettingsMenu && (\n\t\t\t\t<TreeGridCell\n\t\t\t\t\tclassName={ listViewBlockSettingsClassName }\n\t\t\t\t\taria-selected={ !! isSelected }\n\t\t\t\t\tref={ settingsRef }\n\t\t\t\t>\n\t\t\t\t\t{ ( { ref, tabIndex, onFocus } ) => (\n\t\t\t\t\t\t<BlockSettingsMenu\n\t\t\t\t\t\t\tclientIds={ dropdownClientIds }\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\ticon={ moreVertical }\n\t\t\t\t\t\t\tlabel={ __( 'Options' ) }\n\t\t\t\t\t\t\tpopoverProps={ {\n\t\t\t\t\t\t\t\tanchor: settingsPopoverAnchor, // Used to position the settings at the cursor on right-click.\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\ttoggleProps={ {\n\t\t\t\t\t\t\t\tref,\n\t\t\t\t\t\t\t\tclassName: 'block-editor-list-view-block__menu',\n\t\t\t\t\t\t\t\ttabIndex,\n\t\t\t\t\t\t\t\tonClick: clearSettingsAnchorRect,\n\t\t\t\t\t\t\t\tonFocus,\n\t\t\t\t\t\t\t} }\n\t\t\t\t\t\t\tdisableOpenOnArrowDown\n\t\t\t\t\t\t\texpand={ expand }\n\t\t\t\t\t\t\texpandedState={ expandedState }\n\t\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\n\t\t\t\t\t\t\t__experimentalSelectBlock={\n\t\t\t\t\t\t\t\tupdateFocusAndSelection\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</TreeGridCell>\n\t\t\t) }\n\t\t</ListViewLeaf>\n\t);\n}\n\nexport default memo( ListViewBlock );\n"],"mappings":"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","ignoreList":[]}