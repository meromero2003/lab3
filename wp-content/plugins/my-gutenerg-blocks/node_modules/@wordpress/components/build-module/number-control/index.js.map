{"version":3,"names":["clsx","useRef","forwardRef","isRTL","__","plus","plusIcon","reset","resetIcon","useMergeRefs","deprecated","Input","SpinButton","styles","inputControlActionTypes","add","subtract","roundClamp","ensureNumber","isValueEmpty","HStack","Spacer","useCx","useDeprecated36pxDefaultSizeProp","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","noop","UnforwardedNumberControl","props","forwardedRef","__unstableStateReducer","stateReducerProp","className","dragDirection","hideHTMLArrows","spinControls","isDragEnabled","isShiftStepEnabled","label","max","Infinity","min","required","shiftStep","step","spinFactor","type","typeProp","value","valueProp","size","suffix","onChange","restProps","alternative","since","version","inputRef","mergedRef","isStepAny","baseStep","baseSpin","baseValue","constrainValue","stepOverride","Math","autoComplete","undefined","classes","cx","spinButtonClasses","smallSpinButtons","spinValue","direction","event","preventDefault","shift","shiftKey","delta","nextValue","numberControlStateReducer","state","action","nextState","payload","currentValue","PRESS_UP","PRESS_DOWN","DRAG","x","y","enableShift","modifier","directionModifier","ceil","abs","sign","distance","PRESS_ENTER","COMMIT","applyEmptyValue","buildSpinButtonClickHandler","String","target","current","inputMode","ref","_stateReducerProp","baseState","children","marginBottom","marginRight","spacing","icon","onClick","NumberControl"],"sources":["@wordpress/components/src/number-control/index.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport clsx from 'clsx';\nimport type { ForwardedRef, KeyboardEvent, MouseEvent } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, forwardRef } from '@wordpress/element';\nimport { isRTL, __ } from '@wordpress/i18n';\nimport { plus as plusIcon, reset as resetIcon } from '@wordpress/icons';\nimport { useMergeRefs } from '@wordpress/compose';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { Input, SpinButton, styles } from './styles/number-control-styles';\nimport * as inputControlActionTypes from '../input-control/reducer/actions';\nimport { add, subtract, roundClamp } from '../utils/math';\nimport { ensureNumber, isValueEmpty } from '../utils/values';\nimport type { WordPressComponentProps } from '../context/wordpress-component';\nimport type { NumberControlProps } from './types';\nimport { HStack } from '../h-stack';\nimport { Spacer } from '../spacer';\nimport { useCx } from '../utils';\nimport { useDeprecated36pxDefaultSizeProp } from '../utils/use-deprecated-props';\n\nconst noop = () => {};\n\nfunction UnforwardedNumberControl(\n\tprops: WordPressComponentProps< NumberControlProps, 'input', false >,\n\tforwardedRef: ForwardedRef< any >\n) {\n\tconst {\n\t\t__unstableStateReducer: stateReducerProp,\n\t\tclassName,\n\t\tdragDirection = 'n',\n\t\thideHTMLArrows = false,\n\t\tspinControls = hideHTMLArrows ? 'none' : 'native',\n\t\tisDragEnabled = true,\n\t\tisShiftStepEnabled = true,\n\t\tlabel,\n\t\tmax = Infinity,\n\t\tmin = -Infinity,\n\t\trequired = false,\n\t\tshiftStep = 10,\n\t\tstep = 1,\n\t\tspinFactor = 1,\n\t\ttype: typeProp = 'number',\n\t\tvalue: valueProp,\n\t\tsize = 'default',\n\t\tsuffix,\n\t\tonChange = noop,\n\t\t...restProps\n\t} = useDeprecated36pxDefaultSizeProp< NumberControlProps >( props );\n\n\tif ( hideHTMLArrows ) {\n\t\tdeprecated( 'wp.components.NumberControl hideHTMLArrows prop ', {\n\t\t\talternative: 'spinControls=\"none\"',\n\t\t\tsince: '6.2',\n\t\t\tversion: '6.3',\n\t\t} );\n\t}\n\tconst inputRef = useRef< HTMLInputElement >();\n\tconst mergedRef = useMergeRefs( [ inputRef, forwardedRef ] );\n\n\tconst isStepAny = step === 'any';\n\tconst baseStep = isStepAny ? 1 : ensureNumber( step );\n\tconst baseSpin = ensureNumber( spinFactor ) * baseStep;\n\tconst baseValue = roundClamp( 0, min, max, baseStep );\n\tconst constrainValue = (\n\t\tvalue: number | string,\n\t\tstepOverride?: number\n\t) => {\n\t\t// When step is \"any\" clamp the value, otherwise round and clamp it.\n\t\t// Use '' + to convert to string for use in input value attribute.\n\t\treturn isStepAny\n\t\t\t? '' + Math.min( max, Math.max( min, ensureNumber( value ) ) )\n\t\t\t: '' + roundClamp( value, min, max, stepOverride ?? baseStep );\n\t};\n\n\tconst autoComplete = typeProp === 'number' ? 'off' : undefined;\n\tconst classes = clsx( 'components-number-control', className );\n\tconst cx = useCx();\n\tconst spinButtonClasses = cx( size === 'small' && styles.smallSpinButtons );\n\n\tconst spinValue = (\n\t\tvalue: string | number | undefined,\n\t\tdirection: 'up' | 'down',\n\t\tevent: KeyboardEvent | MouseEvent | undefined\n\t) => {\n\t\tevent?.preventDefault();\n\t\tconst shift = event?.shiftKey && isShiftStepEnabled;\n\t\tconst delta = shift ? ensureNumber( shiftStep ) * baseSpin : baseSpin;\n\t\tlet nextValue = isValueEmpty( value ) ? baseValue : value;\n\t\tif ( direction === 'up' ) {\n\t\t\tnextValue = add( nextValue, delta );\n\t\t} else if ( direction === 'down' ) {\n\t\t\tnextValue = subtract( nextValue, delta );\n\t\t}\n\t\treturn constrainValue( nextValue, shift ? delta : undefined );\n\t};\n\n\t/**\n\t * \"Middleware\" function that intercepts updates from InputControl.\n\t * This allows us to tap into actions to transform the (next) state for\n\t * InputControl.\n\t *\n\t * @return The updated state to apply to InputControl\n\t */\n\tconst numberControlStateReducer: NumberControlProps[ '__unstableStateReducer' ] =\n\t\t( state, action ) => {\n\t\t\tconst nextState = { ...state };\n\n\t\t\tconst { type, payload } = action;\n\t\t\tconst event = payload.event;\n\t\t\tconst currentValue = nextState.value;\n\n\t\t\t/**\n\t\t\t * Handles custom UP and DOWN Keyboard events\n\t\t\t */\n\t\t\tif (\n\t\t\t\ttype === inputControlActionTypes.PRESS_UP ||\n\t\t\t\ttype === inputControlActionTypes.PRESS_DOWN\n\t\t\t) {\n\t\t\t\tnextState.value = spinValue(\n\t\t\t\t\tcurrentValue,\n\t\t\t\t\ttype === inputControlActionTypes.PRESS_UP ? 'up' : 'down',\n\t\t\t\t\tevent as KeyboardEvent | undefined\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles drag to update events\n\t\t\t */\n\t\t\tif ( type === inputControlActionTypes.DRAG && isDragEnabled ) {\n\t\t\t\tconst [ x, y ] = payload.delta;\n\t\t\t\tconst enableShift = payload.shiftKey && isShiftStepEnabled;\n\t\t\t\tconst modifier = enableShift\n\t\t\t\t\t? ensureNumber( shiftStep ) * baseSpin\n\t\t\t\t\t: baseSpin;\n\n\t\t\t\tlet directionModifier;\n\t\t\t\tlet delta;\n\n\t\t\t\tswitch ( dragDirection ) {\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tdelta = y;\n\t\t\t\t\t\tdirectionModifier = -1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'e':\n\t\t\t\t\t\tdelta = x;\n\t\t\t\t\t\tdirectionModifier = isRTL() ? -1 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tdelta = y;\n\t\t\t\t\t\tdirectionModifier = 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'w':\n\t\t\t\t\t\tdelta = x;\n\t\t\t\t\t\tdirectionModifier = isRTL() ? 1 : -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( delta !== 0 ) {\n\t\t\t\t\tdelta = Math.ceil( Math.abs( delta ) ) * Math.sign( delta );\n\t\t\t\t\tconst distance = delta * modifier * directionModifier;\n\n\t\t\t\t\tnextState.value = constrainValue(\n\t\t\t\t\t\t// @ts-expect-error TODO: Investigate if it's ok for currentValue to be undefined\n\t\t\t\t\t\tadd( currentValue, distance ),\n\t\t\t\t\t\tenableShift ? modifier : undefined\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles commit (ENTER key press or blur)\n\t\t\t */\n\t\t\tif (\n\t\t\t\ttype === inputControlActionTypes.PRESS_ENTER ||\n\t\t\t\ttype === inputControlActionTypes.COMMIT\n\t\t\t) {\n\t\t\t\tconst applyEmptyValue =\n\t\t\t\t\trequired === false && currentValue === '';\n\n\t\t\t\tnextState.value = applyEmptyValue\n\t\t\t\t\t? currentValue\n\t\t\t\t\t: // @ts-expect-error TODO: Investigate if it's ok for currentValue to be undefined\n\t\t\t\t\t  constrainValue( currentValue );\n\t\t\t}\n\n\t\t\treturn nextState;\n\t\t};\n\n\tconst buildSpinButtonClickHandler =\n\t\t( direction: 'up' | 'down' ) =>\n\t\t( event: MouseEvent< HTMLButtonElement > ) =>\n\t\t\tonChange( String( spinValue( valueProp, direction, event ) ), {\n\t\t\t\t// Set event.target to the <input> so that consumers can use\n\t\t\t\t// e.g. event.target.validity.\n\t\t\t\tevent: {\n\t\t\t\t\t...event,\n\t\t\t\t\ttarget: inputRef.current!,\n\t\t\t\t},\n\t\t\t} );\n\n\treturn (\n\t\t<Input\n\t\t\tautoComplete={ autoComplete }\n\t\t\tinputMode=\"numeric\"\n\t\t\t{ ...restProps }\n\t\t\tclassName={ classes }\n\t\t\tdragDirection={ dragDirection }\n\t\t\thideHTMLArrows={ spinControls !== 'native' }\n\t\t\tisDragEnabled={ isDragEnabled }\n\t\t\tlabel={ label }\n\t\t\tmax={ max }\n\t\t\tmin={ min }\n\t\t\tref={ mergedRef }\n\t\t\trequired={ required }\n\t\t\tstep={ step }\n\t\t\ttype={ typeProp }\n\t\t\t// @ts-expect-error TODO: Resolve discrepancy between `value` types in InputControl based components\n\t\t\tvalue={ valueProp }\n\t\t\t__unstableStateReducer={ ( state, action ) => {\n\t\t\t\tconst baseState = numberControlStateReducer( state, action );\n\t\t\t\treturn stateReducerProp?.( baseState, action ) ?? baseState;\n\t\t\t} }\n\t\t\tsize={ size }\n\t\t\tsuffix={\n\t\t\t\tspinControls === 'custom' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ suffix }\n\t\t\t\t\t\t<Spacer marginBottom={ 0 } marginRight={ 2 }>\n\t\t\t\t\t\t\t<HStack spacing={ 1 }>\n\t\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\t\tclassName={ spinButtonClasses }\n\t\t\t\t\t\t\t\t\ticon={ plusIcon }\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Increment' ) }\n\t\t\t\t\t\t\t\t\tonClick={ buildSpinButtonClickHandler(\n\t\t\t\t\t\t\t\t\t\t'up'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\t\tclassName={ spinButtonClasses }\n\t\t\t\t\t\t\t\t\ticon={ resetIcon }\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Decrement' ) }\n\t\t\t\t\t\t\t\t\tonClick={ buildSpinButtonClickHandler(\n\t\t\t\t\t\t\t\t\t\t'down'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t</Spacer>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\tsuffix\n\t\t\t\t)\n\t\t\t}\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n\nexport const NumberControl = forwardRef( UnforwardedNumberControl );\n\nexport default NumberControl;\n"],"mappings":"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","ignoreList":[]}