"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.NavigatorToParentButton = void 0;
var _context = require("../../context");
var _view = require("../../view");
var _hook = require("../navigator-back-button/hook");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * External dependencies
 */

/**
 * Internal dependencies
 */

function UnconnectedNavigatorToParentButton(props, forwardedRef) {
  const navigatorToParentButtonProps = (0, _hook.useNavigatorBackButton)({
    ...props,
    goToParent: true
  });
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_view.View, {
    ref: forwardedRef,
    ...navigatorToParentButtonProps
  });
}

/*
 * The `NavigatorToParentButton` component can be used to navigate to a screen and
 * should be used in combination with the `NavigatorProvider`, the
 * `NavigatorScreen` and the `NavigatorButton` components (or the `useNavigator`
 * hook).
 *
 * @example
 * ```jsx
 * import {
 *   __experimentalNavigatorProvider as NavigatorProvider,
 *   __experimentalNavigatorScreen as NavigatorScreen,
 *   __experimentalNavigatorButton as NavigatorButton,
 *   __experimentalNavigatorToParentButton as NavigatorToParentButton,
 * } from '@wordpress/components';
 *
 * const MyNavigation = () => (
 *   <NavigatorProvider initialPath="/">
 *     <NavigatorScreen path="/">
 *       <p>This is the home screen.</p>
 *        <NavigatorButton path="/child">
 *          Navigate to child screen.
 *       </NavigatorButton>
 *     </NavigatorScreen>
 *
 *     <NavigatorScreen path="/child">
 *       <p>This is the child screen.</p>
 *       <NavigatorToParentButton>
 *         Go to parent
 *       </NavigatorToParentButton>
 *     </NavigatorScreen>
 *   </NavigatorProvider>
 * );
 * ```
 */
const NavigatorToParentButton = exports.NavigatorToParentButton = (0, _context.contextConnect)(UnconnectedNavigatorToParentButton, 'NavigatorToParentButton');
var _default = exports.default = NavigatorToParentButton;
//# sourceMappingURL=component.js.map